const vertexShaderSource = `
attribute vec3 vertex;
uniform mat4 ModelViewMatrix;
uniform mat4 ProjectionMatrix;
uniform vec4 color;
varying vec4 vColor;

void main() {
    gl_Position = ProjectionMatrix * ModelViewMatrix * vec4(vertex, 1.0);
    vColor = color;
}`;

const fragmentShaderSource = `
precision mediump float;
varying vec4 vColor;

void main() {
    gl_FragColor = vColor;
}`;

// Shader for WebCam
const vertexShaderWebCamSource = `
attribute vec3 vertex;
attribute vec2 texCoord;
varying vec2 vTexCoord;

void main() {
    gl_Position = vec4(vertex, 1.0);
    vTexCoord = texCoord;
}`;

const fragmentShaderWebCamSource = `
precision mediump float;
varying vec2 vTexCoord;
uniform sampler2D sampler;

void main() {
    gl_FragColor = texture2D(sampler, vTexCoord);
}`;